# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: audioProcess

custom:
  stage: "${opt:stage, self:provider.stage}"

provider:
  name: aws
  runtime: nodejs10.x

  # you can overwrite defaults here
  profile: mobilepractice
  memorySize: 256
  timeout: 15
  environment: ${file(env.yml):${self:custom.stage}}
  deploymentBucket:
    name: 'serverless-mp-deployments'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource: "arn:aws:s3:::*"
    - Effect: "Allow"
      Action:
        - "ElasticTranscoder:CreateJob"
      Resource: "*"

functions:
  process:
    handler: handler.process
    events:
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .wav
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .WAV
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .webm
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .WEBM
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .mp3
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .MP3
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .m4a
          existing: true
      - s3:
          bucket: ${file(env.yml):${self:custom.stage}.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${file(env.yml):${self:custom.stage}.folder}/uploads/
            - suffix: .M4A
          existing: true
  processed:
    handler: handler.processed
    events:
      - sns:
          topicName: ${file(env.yml):${self:custom.stage}.snsName}
          arn:
            Fn::Join:
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - ${file(env.yml):${self:custom.stage}.snsName}
